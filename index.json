[{"content":"\n\n## Array\n\n- 如果设置某个值的索引超过了数组现有项数，数组就会自动增加到该索引值加1的长度，\n打印只能打印出已经设置过值的项，其它不存在项单独访问打印输出undefined\n\n- 数组的length属性不是只读的，可以设置，如果设置的(长度-1)小于实际项数，会把后面的项移除，访问移除的项返回undefined；\n如果设置的(长度-1)大于数组项数，访问多出部份返回undefined\n\n### 转换方法\n\ntoString() \n\n- 返回由数组中每个值的字符串形式拼接而成的一个以逗号分隔的字符串\n\n- 实际上是数组的每一项调用toString()方法的返回值组成的字符串\n\nvalueOf()  \n\n- 返回数组\n\njoin()        \n\n- 传入一个参数，返回由数组中每个值的字符串形式拼接而成的一个以传入的参数分隔的字符串\n              \n- 不传或者传入undefined，默认分隔符为逗号，IE7及以下版本会以undefined分隔\n\n\u003e 如果数组中的某一项为null或者undefined，则调用以上方法该项会以空字符串的方式返回\n\n### 栈方法LIFO(Last-In-First-Out后进先出)\npush()        \n\n- 接收任意数量的参数，把它们逐个添加到数组末尾，并返回修改后数组的长度\n\npop()         \n\n- 从数组末尾移除最后一项，减少数组的length值，然后返回移除的项\n\n### 队列方法FIFO(First-In-First-Out先进先出)\n\nshift()       \n\n- 移除数组中的第一个项并返回该项，同时将数组长度减1\n\nunshift()     \n\n- 在数组前端添加任意个项并返回新数组的长度\n\n### 重排序方法：\nreverse()     \n\n- 发转数组项的顺序\n\nsort()        \n\n- 按升序排列数组项——即最小的值位于最前面，最大的值排在最后面\n\n- 会调用每个数组项的toString()转型方法，然后比较得到的字符串(字符串比较的是在字母表中的位置，相当于用的字符串localeCompare方法，返回值是1，0，-1，所以结果往往不是正常人想要的)，以确定如何排序\n              \n- 可以传入比较函数(对于数字arr.sort(function(value1,value2){return value2-value1;}))\n\n### 操作方法\nconcat()      \n\n- 拼接数组，如果没有参数返回调用数组的副本\n\nslice()       \n\n- 传一个参数，截取从该参数索引开始到结束，返回新数组\n                          \n- 传两个参数，截取第一个参数索引开始到第二个参数索引结束，返回新数组(取不到第二个参数对应索引的元素)\n                         \n- 如果参数是负数，先与数组长度相加，再按前个方式截取\n                        \n- 如果结束位置小于起始位置，则返回空数组\n\nsplice()     【最强大的数组方法】\n              \n- 删除：删除任意数量的项，只需指定2个参数：要删除的第一项的位置和要删除的项数\n              \n- 替换：向指定位置插入任意数量的项，只需提供3个参数：起始位置、要删除的项数（从起始位置那一项开始删）和要插入的项。\n - 如果要插入多个项，可以再传入第四、第五，以至任意多个项。\n - 如果要删除的项数为0，则相当与插入\n              \n- 返回值为被删除项构成的数组\n\n### 位置方法(ECMAScript5)：\nindexOf()             \n\n- 接收两个参数：要查找的项和（可选的）表示查找起点位置的索引(会比较起点位置这一项)\n                      \n- 从头或者起点位置那一项开始往后，返回要查找的项在数组中的位置，或者在没找到的情况下返回-1\n\nlastIndexOf()         \n\n- 接收两个参数：要查找的项和（可选的）表示查找起点位置的索引(会比较起点位置这一项)\n                      \n- 从尾或者起点位置那一项开始往前，返回要查找的项在数组中的位置，或者在没找到的情况下返回-1\n\n\u003e必须是全等\"===\"才会返回\n\n### 迭代方法：\nforEach()             \n\n- 对数组中的每一项运行给定函数，没有返回值\nfilter()              \n\n- 对数组中的每一项运行给定函数，返回该函数会返回true 的项组成的数组\nmap()                 \n\n- 对数组中的每一项运行给定函数，返回每次函数调用的结果组成的数组\nsome()                \n\n- 对数组中的每一项运行给定函数，该函数对任意一项返回true，则返回值为true  （||）\nevery()               \n\n- 对数组中的每一项运行给定函数，该函数对每一项返回true，则返回值为true（\u0026\u0026）\n\u003e传参顺序都是(item,index,array) 只有jQuery的each函数是(index, item) \n\n### 归并方法：\nreduce()              \n\n- 从数组第一项开始到最后一项，迭代的开始项是数组的第二项，所以迭代的第一项是数组的第一项\nreduceRight()         \n- 从数组最后一项开始到第一项，迭代的开始项是数组的倒数第二项，所以迭代的第一项是数组的倒数第一项\n  - 这两个方法都会迭代数组的所有项，然后构建一个最终返回的值。\n  - 这两个方法都接收两个参数：一个在每一项上调用的函数和（可选）作为归并基础的初始值\n      - 被传入的函数都可以接受四个参数，前一个值(prev),当前值(cur)，项的索引和数组对象\n         - 这个函数返回的任何值都会作为第一个参数自动传给下一项。\n\n# String操作方法\n\u003e所有方法空字符都算\n\n### 字符方法：\ncharAt()              \n\n- 接受一个参数，返回对应字符串索引的字符\ncharCodeAt()          \n- 接受一个参数，返回对应字符串索引的字符编码\n\n### 字符串操作方法：\nconcat()              \n\n- 接受任意多个字符串参数，拼接字符串，返回新字符串，不会改变原始字符串(一般用+隐式转换代替)\n\n### ECMAScript提供\nslice()、substr()、substring()\n\n- 三个方法都可以接受1-2个参数\n- 参数不为负数：\n    - 相同点：第一个参数指定开始位置，第二个参数指定结束位置(不传默认到字符串结尾)\n    - 不同点：slice()、substring()第二个参数指的是取到该位置的前一个字符(取前不取后)\n                    substr()第二个参数指的是返回的字符串个数\n- 参数为负数：\n    - slice()方法会将传入的负值与字符串的长度相加(如果转换后第一个参数\u003e=第二个参数，则返回空字符串)\n    - substr()方法将负的第一个参数加上字符串的长度，而将负的第二个参数转换为0(如果第二个参数是负值，必然返回空字符串)\n\n    - substring()方法会把所有负值参数都转换为0 (substring()会将传入的较小的数作为开始位置)\n\n### 字符串位置方法(同数组位置方法)：\nindexOf()\nlastIndexOf()\n\n### trim方法(ECMAScript5)：\ntrim()       \n\n- 删除前置和后置的所有空格,返回一个新字符串，原始字符串不改变\n\n### 字符串大小写转换方法\ntoLowerCase()           \n\n- 转小写\n\ntoUpperCase()           \n\n- 转大写\n\ntoLocaleLowerCase()     \n\n- 针对不同地区转小写\n\ntoLocaleUpperCase()     \n\n- 针对不同地区转大写\n\n### 字符串的模式匹配方法\nmatch()     \n\n- 只接受一个参数，要么是正则表达式，要么是一个对象     \n- 数组的第一项是与整个模式匹配的字符串(第一个匹配成功的)，之后的每一项(如果有)保存着与正则表达式中的捕获组匹配的字符串\n\nsearch()    \n\n- 只接受一个参数，要么是正则表达式，要么是一个对象\n- 返回字符串中第一个匹配项的索引；如果没有找到匹配项，则返回-1\n\nreplace()  \n\n- 接受两个参数：第一个参数可以是一个RegExp对象或者一个字符串(这个字符串不会被转换成正则表达式)，第二个参数可以是一个字符串或者一个函数\n   - 如果第一个参数是字符串，那只会替换第一个匹配的字符串\n     - 如果想要替换所有，唯一的办法是写一个正则表达式，并指定全局(g)\n- 第二个参数可以是一个函数，这个函数应该返回一个字符串表示替换的内容\n   - 在只有一个匹配项（即与模式匹配的字符串）的情况下，会向这个函数传递3 个参数：模式的匹配项、模式匹配项在字符串中的位置和原始字符串。\n      - 在正则表达式中定义了多个捕获组的情况下，传递给函数的参数依次是模式的匹配项、第一个捕获组的匹配项、第二个捕获组的匹配项……，但最后两个参数仍然分别是模式的匹配项在字符串中的位置和原始字符串\n\nsplit()     \n\n- 可以基于指定的分隔符将一个字符串分割成多个子字符串，并将结果放在一个数组中\n  - 分隔符可以是字符串，也可以是一个RegExp对象\n- 可以接受可选的第二个参数，用于指定数组的大小","cover":"/images/wallhaven-443187.jpg","link":"数组、字符串操作方法.html","preview":"\u003cp\u003e简单总结了JS中数组和字符串的操作方法。\u003c/p\u003e\n","title":"数组、字符串操作方法"}]